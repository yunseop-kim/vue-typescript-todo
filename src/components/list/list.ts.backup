import Vue from 'vue';
import Component from 'vue-class-component';
// import axios, {AxiosResponse} from 'axios';
import { firebaseDB, firebaseAuth } from '../../firebase/config';
import * as vueFire from 'vuefire';

Vue.use(vueFire);
@Component({
    template: require('./list.html')
})
export class ListComponent extends Vue {

    items: any[] = [];
    newComment: string = '';

    private url = 'https://jsonplaceholder.typicode.com/users';
    protected commentsRef = firebaseDB.ref('Comments');
    protected usersRef = firebaseDB.ref('Users');

    constructor() {
        super();
    }

    mounted() {
        this.$nextTick(() => {
            this.loadItems();
        });
    }

    formatDate(date) {
        let year = date.getFullYear();
        let month = date.getMonth();
        let day = date.getDate();
        let hour = date.getHours();
        let minute = date.getMinutes();
        let second = date.getSeconds();

        return year + '-' + month + '-' + day + ' ' + hour + ':' + minute + ':' + second;
    }

    async addComments() {
        let value = this.newComment && this.newComment.trim();
        let userInfo = await firebaseDB.ref('Users/' + firebaseAuth.currentUser.uid).once('value');
        
        if (!value) {
            return;
        }

        this.commentsRef.push({
            writer: userInfo.val(),
            message: value,
            sendtime: this.formatDate(new Date())
        });

        this.newComment = '';
    }

    async modifyComments() {

    }

    async removeComments(item) {
        let result = await this.commentsRef.child(item.key).remove();
        console.log(`removeComments > result: ${item}`);
        
    }

    private loadItems() {
        this.commentsRef.on('child_added', (snapshot) => {
            let item = Object.assign(snapshot.val(), {key: snapshot.key});
            // this.items.push(item);
        });

        this.commentsRef.on('child_removed', (snapshot) => {
            let deletedPost = snapshot.val();
            console.log('The blog post titled \'' + deletedPost.message + '\' has been deleted');
        });
    }
}
